#!/usr/bin/env perl

use GoatKCD;
use Data::Dumper;
use Term::ReadLine;
use Web::Scraper;
use URI;
use Try::Tiny;
use Math::Geometry::Planar qw(SegmentIntersection);
use feature qw(say);

my $line;
my $gkcd = GoatKCD->new(debug=>1);
my $term = Term::ReadLine->new();

say STDERR Dumper(SegmentIntersection([[75,0],[65,51],[0,50],[100,50]]));



if (-f $ARGV[0]) {
	$gkcd->summon_the_goatman($ARGV[0])->Display();
	exit;
}

my $comic = 180;

while ($line ne "quit") {
	$line = $term->readline("Comic Number: ");
	my ($command,@args) = split(/ /,$line);
	
	if (main->can($command)) {
		#try {
			main->$command(@args);
		#} catch {
			#say STDERR "Something went fucky....";
			#say STDERR $@;
		#};
	} else {
		if ($command eq "") {
			$comic++;
			show("originals/$comic.png");
		} else {
			usage();
		}
	}
}

sub quit {
	exit;
}

sub set_comic {
	my ($class,$number) = @_;

	$comic = $number;
	show("./originals/$number.png");
}

sub show {
	my ($class,$file) = @_;

	summon($file)->Display();
}

sub beastmode {
	my $class = shift;
	my $flag = shift;

	$gkcd->beastmode($gkcd->beastmode^1);
}

sub minlength {
	my ($class,$flag) = @_;

	$gkcd->processor->min_line_length($flag);
}

sub debug {
	my ($class) = @_;

	$gkcd->debug($gkcd->debug^1);
}

sub stinger {
	my ($class,$img) = @_;

	if (-f $img) {
		$gkcd->stinger($gkcd->load_img($img));
	}
}

sub minrect{
	my ($class,$size) = @_;

	$gkcd->processor->min_rect_thickness($size);
}

sub proximity {
	my ($class,$prox) = @_;

	$gkcd->processor->collapse_proximity($prox);
}

sub comic {
	my ($class,$id) = @_;

	my $res = scraper {
		process 'div#comic > img',img=>'@src';
	}->scrape(URI->new("https://xkcd.com/$id"));

	summon($res->{img})->Display();
}

sub threshold {
	my ($class,$id) = @_;

	$gkcd->processor->threshold($id);
}

sub rho {
    my ($class,$id) = @_;

    $gkcd->processor->rho($id);
}

sub theta {
    my ($class,$id) = @_;

    $gkcd->processor->theta($id);
}


sub summon {
	my $what = shift;
	return $gkcd->summon_the_goatman($what);
}

sub usage() {
	say "LOL";
}	
